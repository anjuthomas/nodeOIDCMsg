var jws = require('../lib/jws');
var once = require('lodash.once');
var messageSigner = require('../../../message/sign');

var jwtSigner = JWTSigner.prototype;
jwtSigner = Object.create(messageSigner);
jwtSigner.constructor = JWTSigner;

function JWTSigner(){
};
jwtSigner.sign = function (tokenProfile, secretOrPrivateKey, options, callback) {

  var messageInfo = messageSigner.sign.call(this, tokenProfile, secretOrPrivateKey, options, callback);
  var header = messageInfo["header"];
  var payload = messageInfo["payload"];
  var options = messageInfo["options"]

  var encoding = options.encoding || 'utf8';

  if (typeof callback === 'function') {
    callback = callback && once(callback);

    jws.createSign({
      header: header,
      privateKey: secretOrPrivateKey,
      payload: payload,
      encoding: encoding
    }).once('error', callback)
      .once('done', function (signature) {
        callback(null, signature);
      });
  } else {
    return jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});
  }
};

module.exports = jwtSigner;
