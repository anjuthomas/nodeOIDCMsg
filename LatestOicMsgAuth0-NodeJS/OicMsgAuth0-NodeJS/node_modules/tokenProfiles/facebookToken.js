'use strict';

var BasicIdToken = require('./basicIdToken');  

function FacebookToken(user_id, app_id, issued_at){
    this.userId = user_id;
    this.appId = app_id;
    this.iat = issued_at;
    this.validateRequiredFields();
};

FacebookToken.prototype = Object.create(BasicIdToken.prototype);
FacebookToken.prototype.constructor = FacebookToken;

FacebookToken.prototype.options_to_payload = {
    'userId' : 'userId',
    'appId' : 'appId',
    'iat' : 'iat',
  };
  
FacebookToken.prototype.options_for_objects = [
    'expiresIn',
    'notBefore',
    'noTimestamp',
    'audience',
    'issuer',
    'subject',
    'jwtid',
  ];

  FacebookToken.prototype.knownNonStandardClaims = {
    'exp': 'exp',
  };

FacebookToken.prototype.validateRequiredFields = function(){
    if (this.userId && this.appId && this.iat){
        console.log("Validated all fields")
    }else{
        throw new Error("You are missing the required parameter : age");
    }
};

FacebookToken.prototype.getStandardClaims = function(){
    FacebookToken.prototype.standard_claims = { "userId" : this.userId, "appId" : this.appId, "iat" : this.iat};
    return FacebookToken.prototype.standard_claims;         
};

module.exports = FacebookToken;

