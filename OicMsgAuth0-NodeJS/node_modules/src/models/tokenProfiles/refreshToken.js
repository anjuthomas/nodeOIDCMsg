'use strict';

var BasicIdToken = require('./basicIdToken');  
var jwtDecoder = require('../../controllers/messageTypes/jwt/jsonwebtoken/decode');
var jwtSigner = require('../../controllers/messageTypes/jwt/jsonwebtoken/decode');

function RefreshToken(refresh_token, access_token){
    this.refresh_token = refresh_token;
    this.access_token = access_token;
    this.validateRequiredFields();
};

RefreshToken.prototype = Object.create(BasicIdToken.prototype);
RefreshToken.prototype.constructor = RefreshToken;

RefreshToken.prototype.options_to_payload = {
    'refresh_token': 'refresh_token',
    'access_token': 'access_token',
};
  
RefreshToken.prototype.options_for_objects = [
    'expiresIn',
    'notBefore',
    'noTimestamp',
    'audience',
    'issuer',
    'subject',
    'jwtid',
];

RefreshToken.prototype.knownNonStandardClaims = {
    'knownNonStandardClaim' : 'knownNonStandardClaim',
};

RefreshToken.prototype.validateRequiredFields = function(){
    if (this.refresh_token && this.access_token){
        console.log("Validated all standard fields")
    }else {
        throw new Error("You are missing a required parameter");
    }
};

RefreshToken.prototype.getStandardClaims = function(){
    RefreshToken.prototype.standard_claims = { "refresh_token" : this.refresh_token, "access_token" : this.access_token};
    return RefreshToken.prototype.standard_claims;         
};

module.exports = RefreshToken;

